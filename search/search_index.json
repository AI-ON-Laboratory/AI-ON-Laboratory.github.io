{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"AI-ON-Laboratory wiki","text":""},{"location":"i3lung-data-analysis/instructions/","title":"I3Lung data analysis \ud83d\udcca","text":""},{"location":"i3lung-data-curation/instructions/","title":"I3Lung data curation \ud83d\udee0\ufe0f","text":""},{"location":"i3lung-tool/instructions/","title":"I3Lung tool \ud83e\udd16","text":""},{"location":"laboratory/instructions/","title":"Laboratory \ud83e\uddea","text":""},{"location":"laboratory/instructions/#connect-to-lab-wifi","title":"Connect to lab wifi","text":""},{"location":"master/instructions/","title":"Master students \ud83c\udf93","text":""},{"location":"master/instructions/#get-wifi-access","title":"Get wifi access \ud83d\udedc","text":"<p>The access to wifi in Cascina Rosa is linked to the MAC address of your device. To get you MAC address, follow the instructions below:</p> <ul> <li> <p>Windows: open a command prompt and run the command <code>getmac</code></p> </li> <li> <p>MacOS/Linux: open a terminal and run the command <code>ifconfig | grep ether</code></p> </li> </ul> <p>Give the MAC address to Adam, the lab manager of AI-ON-Lab. He will forward it to the IT department.</p>"},{"location":"master/instructions/#set-up-for-coding","title":"Set up for coding \ud83d\udcbb","text":""},{"location":"master/instructions/#install-python-311","title":"Install Python 3.11 \ud83d\udc0d","text":"<ul> <li>If you have a Windows machine, download Python 3.11 from the Microsoft Store</li> <li>Otherwise<ol> <li>Go to the official Python download page: https://www.python.org/downloads/</li> <li>Click on the \"Download Now\" button for Python 3.11.</li> <li>Save the installer to your computer and run it.</li> <li>Follow the installation prompts to install Python 3.11.</li> </ol> </li> </ul>"},{"location":"master/instructions/#install-visual-studio-code","title":"Install Visual Studio Code \ud83d\udcc1","text":"<p>Visual Studio Code is a lightweight code editor that supports Python development. Follow these steps to install VSCode on your computer:</p> <ul> <li>If you have a Windows machine, download VSCode from the Microsoft Store</li> <li>Otherwise<ol> <li>Go to the official VSCode download page: https://code.visualstudio.com_download/</li> <li>Click on the \"Download\" button for your operating system (Windows, macOS, or Linux).</li> <li>Save the installer to your computer and run it.</li> <li>Follow the installation prompts to install VSCode.</li> </ol> </li> </ul>"},{"location":"master/instructions/#install-jupyter-extension-in-vscode","title":"Install Jupyter Extension in VSCode \ud83d\udcd3","text":"<p>Jupyter is an interactive computing environment that allows you to write and run Python code in a notebook format. Follow these steps to install the Jupyter extension in VSCode:</p> <ol> <li>Open VSCode.</li> <li>Click on the Extensions icon in the left sidebar or press <code>Ctrl + Shift + X</code> (Windows/Linux) or <code>Cmd + Shift + X</code> (macOS).</li> <li>Search for \"Jupyter\" in the Extensions Marketplace.</li> <li>Click on the \"Jupyter\" extension by Microsoft.</li> <li>Click the \"Install\" button to install the extension.</li> <li>Open a new terminal in VSCode by clicking on the \"Terminal\" button in the top menu or pressing <code>Ctrl + Shift +</code> (Windows/Linux) or <code>Cmd + Shift +</code> (macOS).</li> <li>Run the following command to install the Jupyter kernel: <code>bash python -m pip install ipykernel</code></li> </ol>"},{"location":"master/instructions/#setting-up-git","title":"Setting up Git \ud83d\udce6","text":"<p>Git is a version control system that allows you to track changes in your code and collaborate with others. Follow these steps to set up Git on your computer:</p> <ol> <li>Download and install Git from the official website: https://git-scm.com/downloads</li> <li>Open a terminal and run the following commands to configure Git with your name and email address:     <pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"Your email address\"\n</code></pre></li> <li>Check that Git is installed correctly by running the following command:     <pre><code>git --version\n</code></pre></li> <li>If you see the Git version number, Git is installed correctly.</li> </ol>"},{"location":"master/instructions/#entering-the-ai-on-laboratory-github-organization","title":"Entering the AI-ON-Laboratory GitHub organization \ud83c\udfe2","text":"<p>The AI-ON-Laboratory GitHub organization is where you will submit your code for the thesis project. Follow these steps to enter the organization:</p> <p>If you don't have a GitHub account, follow these steps to create one:</p> <ol> <li>Go to the GitHub website: https://github.com</li> <li>Click on the \"Sign up\" button and follow the instructions to create an account.</li> <li>Verify your email address to complete the registration process.</li> </ol> <p>Once you have a GitHub account, follow these steps to enter the AI-ON-Laboratory organization:</p> <ol> <li>Give your GitHub username to a member of the Lab, we will send you an invitation to join the AI-ON-Laboratory organization.</li> <li>Check your email for the invitation and click on the link to accept it.</li> <li>Log in to your GitHub account to confirm your membership in the organization.</li> </ol>"},{"location":"master/instructions/#create-a-github-repository-within-the-organization","title":"Create a GitHub repository within the organization \ud83d\udcc2","text":"<p>A GitHub repository is a remote location where you can store and share your code with others. Follow these steps to create a GitHub repository for your project:</p> <ol> <li>Go to the GitHub website: https://github.com</li> <li>Log in to your GitHub account.</li> <li>Click on the \"+\" icon in the top right corner and select \"New repository\".</li> <li>Since you are working on a project for the AI-ON-Laboratory, make sure to select the \"AI-ON-Laboratory\" organization in the \"Owner\" dropdown menu.</li> <li>Enter a name for your repository. It must be in the form \"YEAR_LASTNAME_PROJECTDESCRIPTION\" (e.g., \"2024_ROSSI_ImageClassification\").</li> <li>Add a description for your repository (optional).</li> <li>Since you will be working with private data, make sure to select the \"Private\" option.</li> <li>Click on the \"Create repository\" button to create the repository.</li> </ol>"},{"location":"master/instructions/#setting-up-the-repository-on-vscode","title":"Setting up the repository on VSCode \ud83d\udd04","text":"<p>Once you have created the repository on GitHub, you can interact with it through VSCode using the GitLens extension. Follow these steps to install the GitLens extension in VSCode:</p> <ol> <li>Open VSCode.</li> <li>Click on the Extensions icon in the left sidebar or press <code>Ctrl + Shift + X</code> (Windows/Linux) or <code>Cmd + Shift + X</code> (macOS).</li> <li>Search for \"GitLens\" in the Extensions Marketplace and install it.</li> </ol> <p>Once you have installed the GitLens extension, you can clone the repository to your local machine:</p> <ol> <li>Open the repository on GitHub.</li> <li>Click on the \"Code\" button and copy the URL of the repository.</li> <li>Open VSCode.</li> <li>Click on the \"Source Control\" icon in the left sidebar or press <code>Ctrl + Shift + G</code> (Windows/Linux) or <code>Cmd + Shift + G</code> (macOS).</li> <li>Click on the \"Clone Repository\" button.</li> <li>Paste the URL of the repository in the input field and press <code>Enter</code>.</li> <li>Select a location on your local machine to clone the repository.</li> <li>Open the cloned repository in VSCode by clicking on the \"Open Repository\" button.</li> </ol>"},{"location":"master/instructions/#pushing-your-code-to-the-repository","title":"Pushing your code to the repository \ud83d\udce4","text":"<p>Once you have written your code, you can push it to the repository on GitHub. Follow these steps to push your code to the repository:</p> <ol> <li>Click on the \"Source Control\" icon in the left sidebar.</li> <li>In the message field write a commit message shortly describing the changes you made.</li> <li>Click on the \"+\" button on the right side of the files that you want to commit, in this way you will stage them.</li> <li>Click on the \"Commit\" button to commit the changes.</li> <li>Click on the \"...\" button and select \"Push\" to push the changes to the remote repository on GitHub.</li> </ol> <p>If you are collaborating with others on the same repository, make sure to pull the latest changes before working on your code:</p> <ol> <li>Click on the \"Source Control\" icon in the left sidebar.</li> <li>Click on the \"...\" button and select \"Pull\" to pull the latest changes from the remote repository.</li> </ol>"},{"location":"master/instructions/#settings-up-github-copilot","title":"Settings up GitHub Copilot \ud83e\udd16","text":"<p>GitHub Copilot is an AI-powered code completion tool that helps you write code faster and more efficiently. Follow these steps to set up GitHub Copilot in VSCode:</p> <ol> <li>Go to the page: https://github.com/education/students</li> <li>Follow the instructions to get the GitHub Student Developer Pack.</li> <li>Add the GitHub Copilot extension to your VSCode.</li> </ol>"},{"location":"master/instructions/#best-practices-for-writing-python-code","title":"Best Practices for Writing Python Code \u270d\ufe0f","text":""},{"location":"master/instructions/#writing-clean-and-readable-code","title":"Writing Clean and Readable Code","text":"<ul> <li>Use meaningful variable names: avoid single-letter names and make sure the name clearly indicates the variable's purpose.</li> <li>Keep functions and methods short and focused on a single task.</li> <li>Use consistent naming conventions throughout your code (e.g., camelCase or underscore notation).</li> <li>Organize your code using comments, docstrings, and whitespace.</li> </ul>"},{"location":"master/instructions/#following-pep-8-guidelines","title":"Following PEP 8 Guidelines","text":"<ul> <li>Keep lines of code short (80 characters or less) to improve readability.</li> <li>Use consistent indentation (4 spaces or a consistent number of spaces).</li> <li>Use blank lines to separate logical sections of code.</li> <li>Use parentheses to group expressions and improve clarity.</li> </ul>"},{"location":"master/instructions/#writing-comments-and-docstrings","title":"Writing Comments and Docstrings","text":"<ul> <li>Write comments to explain non-obvious code sections or complex logic.</li> <li>Use docstrings to document functions, classes, and modules.</li> <li>Keep comments and docstrings concise and accurate.</li> <li>Use comment blocks to separate sections of code and improve organization.</li> </ul>"},{"location":"master/instructions/#error-handling-and-debugging","title":"Error Handling and Debugging","text":"<ul> <li>Use try/except blocks to catch and handle exceptions.</li> <li>Write descriptive error messages to help diagnose issues.</li> <li>Use logging to track application events and errors.</li> <li>Test your code thoroughly to catch bugs and edge cases.</li> </ul>"},{"location":"master/instructions/#version-control-and-collaboration","title":"Version Control and Collaboration","text":"<ul> <li>Use version control systems (e.g., Git) to track changes and collaborate with others.</li> <li>Write clear and descriptive commit messages.</li> <li>Use branches to manage different versions of your code.</li> <li>Follow established coding standards and best practices.</li> </ul>"},{"location":"master/instructions/#before-submitting-the-thesis","title":"Before submitting the thesis \ud83c\udfc1","text":"<ul> <li>Review your code for readability and reproducibility (e.g., set fixed random states in functions that require them).</li> <li>Test your code thoroughly to ensure it works as expected.</li> <li>Document your code using comments and docstrings.</li> <li>Write a README file that explains how to run your code and reproduce your results.</li> <li>After all your code and data is pushed to the repository, inform the Lab members that your work is ready for review.</li> </ul>"},{"location":"master/instructions/#after-submitting-the-thesis-and-graduating","title":"After submitting the thesis and graduating \ud83c\udfc6","text":"<ul> <li>Celebrate your achievement with your friends and family.</li> <li>Update your LinkedIn profile and resume with your new skills and accomplishments.</li> <li>REMOVE from your computer any sensitive data related to the project.</li> </ul>"},{"location":"master/instructions/#additional-resources","title":"Additional Resources \ud83d\udcda","text":"<ul> <li>Python Documentation</li> <li>PEP 8 Style Guide</li> <li>VSCode Documentation</li> <li>Jupyter Documentation</li> <li>Git Documentation</li> <li>GitHub Guides</li> <li>Stack Overflow - for coding questions and troubleshooting</li> </ul>"}]}